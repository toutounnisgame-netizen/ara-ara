"""
CORRECTIF GAME_SESSION.PY V2.0 - Partie escalation automatique
Ajout m√©thodes pour progression lieux fluide + transitions immersives
"""

def _check_location_transition(self):
    """Escalation automatique AM√âLIOR√âE avec seuils optimis√©s"""

    player_summary = self.player.get_current_state_summary()
    current_loc = self.current_environment.location

    # R√©cup√©ration stats actuelles pour d√©cision
    volonte = player_summary.get("stats", {}).get("volonte", 100)
    excitation = player_summary.get("stats", {}).get("excitation", 0)
    resistance = player_summary.get("resistance", 1.0)
    arousal = player_summary.get("arousal", 0.0)

    # ESCALATION BAR ‚Üí VOITURE (seuils optimis√©s)
    if (current_loc == "bar" and 
        (excitation >= 25 or arousal > 0.25) and  # Seuil plus bas
        volonte < 85):  # Un peu de volont√© perdue

        print("\nüöó " + ">"*10 + " TRANSITION VOITURE " + "<"*10)
        print(f"\n{self.npc.display_name} se penche vers toi avec un sourire charmeur :")
        print("'Il fait chaud ici... Et si on allait discuter dans ma voiture ?'")
        print("'J'ai une tr√®s belle vue sur la ville depuis le parking...'")

        # Choix joueur pour immersion
        print("\nüí≠ Comment r√©agis-tu ?")
        print("1. Accepter de le suivre")
        print("2. H√©siter mais c√©der")  
        print("3. Refuser poliment")

        # Simulation choix selon stats (automatique pour fluidit√©)
        if resistance < 0.7:  # Faible r√©sistance = acceptation
            print("\nTu te surprends √† hocher la t√™te... 'D'accord, allons-y.'")
            transition_success = True
        elif resistance < 0.9:  # R√©sistance moyenne = h√©sitation puis cession
            print("\nTu h√©sites un moment, puis finis par accepter... 'Bon... juste discuter.'")
            transition_success = True
        else:  # Forte r√©sistance = refus mais insistance
            print("\n'Je pr√©f√®re rester ici...' Mais il insiste avec tant de charme...")
            transition_success = resistance < 0.95  # Chance minime

        if transition_success:
            print("\nüöó Vous vous dirigez vers le parking...")
            print("Il t'ouvre galamment la porti√®re passager.")
            print("L'habitacle sent bon le cuir et son parfum masculin.")

            self.current_environment = self.environments["voiture"]
            self.game_state.change_location("voiture")

            # Bonus immersion
            print("\nDans l'intimit√© relative de la voiture, l'atmosph√®re change...")

        else:
            print("\nTu r√©ussis √† d√©cliner son invitation pour l'instant.")

    # ESCALATION VOITURE ‚Üí SALON (progression naturelle)
    elif (current_loc == "voiture" and
          (excitation >= 45 or arousal > 0.45) and
          volonte < 70):

        print("\nüè† " + ">"*10 + " TRANSITION APPARTEMENT " + "<"*10)
        print(f"\n{self.npc.display_name} caresse doucement ta main :")
        print("'Mon appartement n'est qu'√† deux minutes d'ici...'")
        print("'J'ai une tr√®s belle collection d'art que j'aimerais te montrer.'")
        print("'Et un excellent vin que nous pourrions partager...'")

        # R√©solution selon r√©sistance
        if resistance < 0.5:
            print("\nSans r√©fl√©chir vraiment, tu acquiesces...")
            print("'J'aimerais bien voir tes ≈ìuvres d'art.'")
            transition_success = True
        elif resistance < 0.7:
            print("\nTu h√©sites... Une partie de toi sait que c'est risqu√©...")
            print("Mais sa proposition semble innocente... 'D'accord, mais juste un verre.'")
            transition_success = True
        else:
            print("\n'Je ne sais pas... c'est peut-√™tre trop t√¥t...'")
            print("Il sourit avec compr√©hension mais continue ses caresses...")
            transition_success = resistance < 0.8

        if transition_success:
            print("\nüè† Direction son appartement...")
            print("L'ascenseur semble durer une √©ternit√©, vos regards se croisent...")
            print("Il t'ouvre la porte sur un salon √©l√©gamment d√©cor√©.")

            self.current_environment = self.environments["salon"]
            self.game_state.change_location("salon")

            print("\n'Fais comme chez toi', dit-il en pr√©parant deux verres...")

    # ESCALATION SALON ‚Üí CHAMBRE (transition intime)
    elif (current_loc == "salon" and
          (excitation >= 65 or arousal > 0.65) and  
          volonte < 50):

        print("\nüõèÔ∏è " + ">"*10 + " TRANSITION CHAMBRE " + "<"*10)
        print("\nL'atmosph√®re est devenue √©lectrique entre vous...")
        print(f"{self.npc.display_name} se l√®ve lentement et te tend la main :")
        print("'Viens... j'aimerais te montrer quelque chose de sp√©cial.'")
        print("Son regard intense ne laisse aucun doute sur ses intentions...")

        # R√©solution finale selon r√©sistance critique
        if resistance < 0.3:
            print("\nTon c≈ìur bat si fort... Tu prends sa main sans h√©siter.")
            print("'Oui... montre-moi.'")
            transition_success = True
        elif resistance < 0.5:
            print("\nTu trembles l√©g√®rement mais tu ne peux plus reculer...")
            print("Ta main trouve la sienne presque malgr√© toi.")
            transition_success = True
        else:
            print("\n'Je... je ne suis pas s√ªre...'")
            print("Mais il s'approche, ses l√®vres pr√®s de tes cheveux :")
            print("'Tu n'as rien √† craindre avec moi...'")
            transition_success = resistance < 0.6  # Derni√®re chance r√©sistance

        if transition_success:
            print("\nüõèÔ∏è Il te guide vers sa chambre...")
            print("La pi√®ce est tamis√©e, un grand lit domine l'espace...")
            print("Tu r√©alises que vous avez franchi un point de non-retour...")

            self.current_environment = self.environments["chambre"]
            self.game_state.change_location("chambre")

            # Achievement transition finale
            self.game_state.unlock_achievement("reached_bedroom")

        else:
            print("\nTu trouves la force de reculer... 'Pas encore...'")
            print("Il respecte ta d√©cision mais tu vois la d√©ception dans ses yeux.")

def _display_location_atmosphere(self):
    """Affiche ambiance immersive du lieu actuel"""

    location = self.current_environment.location

    atmosphere_descriptions = {
        "bar": [
            "üç∏ L'ambiance du bar est feutr√©e, la musique jazz cr√©e une atmosph√®re intime.",
            "Des couples discutent √† voix basse aux tables environnantes.",
            "L'√©clairage tamis√© danse sur vos visages."
        ],
        "voiture": [
            "üöó Dans l'habitacle, vous √™tes isol√©s du monde ext√©rieur.", 
            "Les si√®ges en cuir sentent bon, l'espace confin√© augmente la proximit√©.",
            "Par la vitre teint√©e, les lumi√®res de la ville d√©filent lentement."
        ],
        "salon": [
            "üè† Le salon √©l√©gant respire le raffinement et l'intimit√©.",
            "Des bougies projettent des ombres dansantes sur les murs.",
            "Le canap√© moelleux vous invite √† vous rapprocher l'un de l'autre."
        ],
        "chambre": [
            "üõèÔ∏è Dans la chambre, l'atmosph√®re est charg√©e de possibilit√©s...",
            "Le grand lit domine la pi√®ce, √©clair√© par une lumi√®re douce.",
            "Ici, tous les masques tombent, seuls vos d√©sirs comptent."
        ]
    }

    descriptions = atmosphere_descriptions.get(location, ["Vous √™tes dans un lieu ind√©termin√©."])

    print("\n" + "~" * 50)
    for desc in descriptions:
        print(desc)
    print("~" * 50)

def _handle_escalation_resistance(self, resistance_level: float) -> Dict[str, Any]:
    """Gestion r√©sistance joueur aux transitions avec feedback"""

    if resistance_level > 0.8:
        messages = [
            "Tu sens que tu perds le contr√¥le de la situation...",
            "Une partie de toi veut r√©sister, mais c'est de plus en plus difficile...",
            "Tu essaies de garder tes distances, mais il est si persuasif..."
        ]
        outcome = "high_resistance"

    elif resistance_level > 0.5:
        messages = [
            "Tu es partag√©e entre envie et appr√©hension...",
            "Ton corps et ta raison se livrent un combat int√©rieur...",
            "Tu te surprends √† c√©der petit √† petit √† ses avances..."
        ]
        outcome = "moderate_resistance"

    else:
        messages = [
            "Tu ne peux plus nier l'attraction que tu ressens...",
            "Tes derni√®res inhibitions s'envolent progressivement...",
            "Tu t'abandonnes √† ses caresses expertes..."
        ]
        outcome = "low_resistance"

    import random
    chosen_message = random.choice(messages)
    print(f"\nüí≠ {chosen_message}")

    return {"outcome": outcome, "message": chosen_message}

# M√âTHODES √Ä AJOUTER √† GameSession pour escalation fluide
